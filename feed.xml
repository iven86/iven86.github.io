

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://iven86.github.io/</id>
  <title>Iven Blog</title>
  <subtitle>DevOps - Penetration Tester - CTF Writeups - Notes - Troubleshooting - Security Tutorial.</subtitle>
  <updated>2025-06-11T19:00:17+02:00</updated>
  <author>
    <name>Iven Blog</name>
    <uri>https://iven86.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://iven86.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://iven86.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 Iven Blog </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Building Your First MCP Server, A Complete Beginner's Guide</title>
    <link href="https://iven86.github.io/posts/Building-Your-First-MCP-Server/" rel="alternate" type="text/html" title="Building Your First MCP Server, A Complete Beginner&amp;apos;s Guide" />
    <published>2025-06-10T18:00:00+02:00</published>
  
    <updated>2025-06-11T18:59:56+02:00</updated>
  
    <id>https://iven86.github.io/posts/Building-Your-First-MCP-Server/</id>
    <content type="text/html" src="https://iven86.github.io/posts/Building-Your-First-MCP-Server/" />
    <author>
      <name>{"name"=>"Iven", "link"=>"https://github.com/iven86"}</name>
    </author>

  
    
    <category term="AI" />
    
    <category term="MCP" />
    
  

  <summary>Building Your First MCP Server: A Complete Beginner’s Guide  Have you ever wondered how AI agents like Claude connect to external tools and data sources? The answer lies in something called the Model Context Protocol (MCP). Today, I’ll walk you through building a simple but complete MCP server from scratch, explaining every piece along the way.  What is MCP and Why Should You Care?  The Model C...</summary>

  </entry>

  
  <entry>
    <title>SQLite MCP Server - A Game-Changer for Development Workflows</title>
    <link href="https://iven86.github.io/posts/SQLite-MCP-Server/" rel="alternate" type="text/html" title="SQLite MCP Server - A Game-Changer for Development Workflows" />
    <published>2025-06-06T18:00:00+02:00</published>
  
    <updated>2025-06-07T18:30:33+02:00</updated>
  
    <id>https://iven86.github.io/posts/SQLite-MCP-Server/</id>
    <content type="text/html" src="https://iven86.github.io/posts/SQLite-MCP-Server/" />
    <author>
      <name>{"name"=>"Iven", "link"=>"https://github.com/iven86"}</name>
    </author>

  
    
    <category term="AI" />
    
    <category term="MCP" />
    
  

  <summary>Hey folks,  I want to share a tool I built that’s been a game-changer in my development workflow: sqlite-mcp-server.  This tool allows me to serve SQLite databases over HTTP, making it incredibly easy to integrate with AI agents in VS Code. Here’s how it’s been helping me:  Key Benefits  Seamless Demo Data Generation I can prompt AI agents to generate realistic demo data by exposing my SQLite d...</summary>

  </entry>

  
  <entry>
    <title>HTB Poison Walkthrough - A Deep Dive into FreeBSD Exploitation</title>
    <link href="https://iven86.github.io/posts/Poison/" rel="alternate" type="text/html" title="HTB Poison Walkthrough - A Deep Dive into FreeBSD Exploitation" />
    <published>2025-05-09T18:00:00+02:00</published>
  
    <updated>2025-05-09T18:00:00+02:00</updated>
  
    <id>https://iven86.github.io/posts/Poison/</id>
    <content type="text/html" src="https://iven86.github.io/posts/Poison/" />
    <author>
      <name>{"name"=>"Iven", "link"=>"https://github.com/iven86"}</name>
    </author>

  
    
    <category term="HackTheBox" />
    
    <category term="Writeup" />
    
    <category term="Medium" />
    
  

  <summary>HackTheBox - Poison: Complete Walkthrough  Introduction  Poison represents an excellent medium-difficulty FreeBSD machine on HackTheBox that provides valuable lessons in web vulnerabilities, password cracking, and privilege escalation through local port forwarding. What makes this box particularly interesting is its departure from the typical Linux-based machines, giving us an opportunity to ex...</summary>

  </entry>

  
  <entry>
    <title>HTB Nineveh Writeup (Walkthrough)</title>
    <link href="https://iven86.github.io/posts/Nineveh/" rel="alternate" type="text/html" title="HTB Nineveh Writeup (Walkthrough)" />
    <published>2025-05-09T18:00:00+02:00</published>
  
    <updated>2025-05-11T19:07:07+02:00</updated>
  
    <id>https://iven86.github.io/posts/Nineveh/</id>
    <content type="text/html" src="https://iven86.github.io/posts/Nineveh/" />
    <author>
      <name>{"name"=>"Iven", "link"=>"https://github.com/iven86"}</name>
    </author>

  
    
    <category term="HackTheBox" />
    
    <category term="Writeup" />
    
    <category term="Medium" />
    
  

  <summary>Introduction  Nineveh is a medium-difficulty Linux machine on HackTheBox that features web vulnerabilities, local file inclusion, and port knocking. This machine requires careful enumeration and creative thinking. In this write-up, I’ll guide you through my approach to compromising this box.  Initial Scanning &amp;amp;amp; Enumeration  First, let’s run an nmap scan to identify open ports and services: ...</summary>

  </entry>

  
  <entry>
    <title>HTB Lame Writeup (Walkthrough)</title>
    <link href="https://iven86.github.io/posts/Lame/" rel="alternate" type="text/html" title="HTB Lame Writeup (Walkthrough)" />
    <published>2025-05-09T18:00:00+02:00</published>
  
    <updated>2025-05-09T18:00:00+02:00</updated>
  
    <id>https://iven86.github.io/posts/Lame/</id>
    <content type="text/html" src="https://iven86.github.io/posts/Lame/" />
    <author>
      <name>{"name"=>"Iven", "link"=>"https://github.com/iven86"}</name>
    </author>

  
    
    <category term="HackTheBox" />
    
    <category term="Writeup" />
    
    <category term="Easy" />
    
  

  <summary>Introduction  Lame was the first box released on HackTheBox, and it’s considered an excellent starting point for beginners. This machine demonstrates classic vulnerabilities in outdated services and provides a straightforward path to root access. In this writeup, I’ll walk through the enumeration process and present multiple methods to exploit this Linux machine.  Machine Overview     Name: Lam...</summary>

  </entry>

</feed>


